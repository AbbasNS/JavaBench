[
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 12,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: incompatible types: EntityCell cannot be converted to Mine",
                "content": "        } else if (newCell instanceof Mine) {\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                List<Position> collectedGems = gameBoard.getPlayer().collectGem(newCell.getPosition());\n                                                                    ^\n  symbol:   method collectGem(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 66,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife(newCell.getPosition());\n                                     ^\n  symbol:   method collectExtraLife(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 91,
                "message": "error: cannot find symbol",
                "content": "            Player player = gameBoard.getPlayer();\n            ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: incompatible types: EntityCell cannot be converted to Mine",
                "content": "        } else if (newCell instanceof Mine) {\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                List<Position> collectedGems = gameBoard.getPlayer().collectGem(newCell.getPosition());\n                                                                    ^\n  symbol:   method collectGem(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 66,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife(newCell.getPosition());\n                                     ^\n  symbol:   method collectExtraLife(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 91,
                "message": "error: cannot find symbol",
                "content": "            Player player = gameBoard.getPlayer();\n            ^\n  symbol:   class Player\n  location: class GameBoardController"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 12,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: cannot find symbol",
                "content": "        Entity entity = newCell.getEntity();\n        ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 64,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.setNumGems(gameBoard.getNumGems() - 1);\n                     ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 73,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 94,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 98,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.setNumGems(gameBoard.getNumGems() + 1);\n                         ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: cannot find symbol",
                "content": "        Entity entity = newCell.getEntity();\n        ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 64,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.setNumGems(gameBoard.getNumGems() - 1);\n                     ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 73,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 94,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 98,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.setNumGems(gameBoard.getNumGems() + 1);\n                         ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 12,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().setNumGems(gameBoard.getPlayer().getNumGems() + 1);\n                                                                      ^\n  symbol:   method getNumGems()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 64,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().setNumLives(gameBoard.getPlayer().getNumLives() + 1);\n                                                                       ^\n  symbol:   method getNumLives()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 88,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(aliveMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 97,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(deadMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().setNumGems(gameBoard.getPlayer().getNumGems() + 1);\n                                                                      ^\n  symbol:   method getNumGems()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 64,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().setNumLives(gameBoard.getPlayer().getNumLives() + 1);\n                                                                       ^\n  symbol:   method getNumLives()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 88,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(aliveMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 97,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(deadMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 18,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 64,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 75,
                "message": "error: cannot find symbol",
                "content": "        newCell.setEntity(gameBoard.getPlayer());\n               ^\n  symbol:   method setEntity(@org.jetbrains.annotations.NotNull Player)\n  location: variable newCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 76,
                "message": "error: cannot find symbol",
                "content": "        gameBoard.getPlayer().setOwner(newEntityCell);\n                                       ^\n  symbol:   variable newEntityCell\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 77,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "        return new MoveResult.Valid(newPosition, playerPosition);\n               ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 102,
                "message": "error: cannot find symbol",
                "content": "                Entity entity = newEntityCell.getEntity();\n                ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 107,
                "message": "error: cannot find symbol",
                "content": "                origEntityCell.setPlayer(gameBoard.getPlayer());\n                              ^\n  symbol:   method setPlayer(@org.jetbrains.annotations.NotNull Player)\n  location: variable origEntityCell of type EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 64,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 75,
                "message": "error: cannot find symbol",
                "content": "        newCell.setEntity(gameBoard.getPlayer());\n               ^\n  symbol:   method setEntity(@org.jetbrains.annotations.NotNull Player)\n  location: variable newCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 76,
                "message": "error: cannot find symbol",
                "content": "        gameBoard.getPlayer().setOwner(newEntityCell);\n                                       ^\n  symbol:   variable newEntityCell\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 77,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "        return new MoveResult.Valid(newPosition, playerPosition);\n               ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 102,
                "message": "error: cannot find symbol",
                "content": "                Entity entity = newEntityCell.getEntity();\n                ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 107,
                "message": "error: cannot find symbol",
                "content": "                origEntityCell.setPlayer(gameBoard.getPlayer());\n                              ^\n  symbol:   method setPlayer(@org.jetbrains.annotations.NotNull Player)\n  location: variable origEntityCell of type EntityCell"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 16,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: incompatible types: EntityCell cannot be converted to Mine",
                "content": "        } else if (newCell instanceof Mine) {\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 67,
                "message": "error: cannot find symbol",
                "content": "                playerCell = playerCell.setEntity(new Player(newCell));\n                                                      ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 72,
                "message": "error: cannot find symbol",
                "content": "                playerCell = playerCell.setEntity(new Player(newCell));\n                                                      ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 77,
                "message": "error: cannot find symbol",
                "content": "                playerCell = playerCell.setEntity(new Player(newCell));\n                                                      ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 78,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "                return new MoveResult.Valid(newPosition, playerPosition);\n                       ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 99,
                "message": "error: cannot find symbol",
                "content": "            playerCell = playerCell.setEntity(new Player(gameBoard.getEntityCell(origPosition)));\n                                                  ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: incompatible types: EntityCell cannot be converted to Mine",
                "content": "        } else if (newCell instanceof Mine) {\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 67,
                "message": "error: cannot find symbol",
                "content": "                playerCell = playerCell.setEntity(new Player(newCell));\n                                                      ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 72,
                "message": "error: cannot find symbol",
                "content": "                playerCell = playerCell.setEntity(new Player(newCell));\n                                                      ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 77,
                "message": "error: cannot find symbol",
                "content": "                playerCell = playerCell.setEntity(new Player(newCell));\n                                                      ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 78,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "                return new MoveResult.Valid(newPosition, playerPosition);\n                       ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 99,
                "message": "error: cannot find symbol",
                "content": "            playerCell = playerCell.setEntity(new Player(gameBoard.getEntityCell(origPosition)));\n                                                  ^\n  symbol:   class Player\n  location: class GameBoardController"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 10,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 72,
                "message": "error: cannot find symbol",
                "content": "        gameBoard.getPlayer().setOwner(newEntityCell);\n                                       ^\n  symbol:   variable newEntityCell\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 72,
                "message": "error: cannot find symbol",
                "content": "        gameBoard.getPlayer().setOwner(newEntityCell);\n                                       ^\n  symbol:   variable newEntityCell\n  location: class GameBoardController"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 10,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 74,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 94,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 95,
                "message": "error: cannot find symbol",
                "content": "            if (entity instanceof Player) {\n                                  ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 74,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 94,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 95,
                "message": "error: cannot find symbol",
                "content": "            if (entity instanceof Player) {\n                                  ^\n  symbol:   class Player\n  location: class GameBoardController"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 14,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                List<Position> collectedGems = gameBoard.getPlayer().collectGem(newEntityCell);\n                                                                    ^\n  symbol:   method collectGem(EntityCell)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife(newEntityCell);\n                                     ^\n  symbol:   method collectExtraLife(EntityCell)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 88,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(aliveMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 97,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(deadMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 101,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(invalidMove.newPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                List<Position> collectedGems = gameBoard.getPlayer().collectGem(newEntityCell);\n                                                                    ^\n  symbol:   method collectGem(EntityCell)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife(newEntityCell);\n                                     ^\n  symbol:   method collectExtraLife(EntityCell)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 88,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(aliveMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 97,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(deadMove.origPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 101,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().getOwner().setPosition(invalidMove.newPosition);\n                                            ^\n  symbol:   method setPosition(@org.jetbrains.annotations.NotNull Position)\n  location: class @org.jetbrains.annotations.Nullable EntityCell"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 14,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: incompatible types: EntityCell cannot be converted to Mine",
                "content": "        } else if (newCell instanceof Mine) {\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                List<Position> collectedGems = gameBoard.getPlayer().collectGem(newPosition);\n                                                                    ^\n  symbol:   method collectGem(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 66,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife(newPosition);\n                                     ^\n  symbol:   method collectExtraLife(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 91,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 92,
                "message": "error: cannot find symbol",
                "content": "            if (entity instanceof Player) {\n                                  ^\n  symbol:   class Player\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 58,
                "message": "error: incompatible types: EntityCell cannot be converted to Mine",
                "content": "        } else if (newCell instanceof Mine) {\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 63,
                "message": "error: cannot find symbol",
                "content": "                List<Position> collectedGems = gameBoard.getPlayer().collectGem(newPosition);\n                                                                    ^\n  symbol:   method collectGem(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 66,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife(newPosition);\n                                     ^\n  symbol:   method collectExtraLife(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 91,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 92,
                "message": "error: cannot find symbol",
                "content": "            if (entity instanceof Player) {\n                                  ^\n  symbol:   class Player\n  location: class GameBoardController"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 56,
                "message": "error: cannot find symbol",
                "content": "            Entity entity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 59,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 62,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "        Entity entity = newCell.getEntity();\n        ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 65,
                "message": "error: cannot find symbol",
                "content": "            List<Position> collectedGems = gameBoard.getPlayer().collectGem(newPosition);\n                                                                ^\n  symbol:   method collectGem(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 68,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().collectExtraLife(newPosition);\n                                 ^\n  symbol:   method collectExtraLife(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "        Entity entity = newCell.getEntity();\n        ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 65,
                "message": "error: cannot find symbol",
                "content": "            List<Position> collectedGems = gameBoard.getPlayer().collectGem(newPosition);\n                                                                ^\n  symbol:   method collectGem(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 68,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.getPlayer().collectExtraLife(newPosition);\n                                 ^\n  symbol:   method collectExtraLife(Position)\n  location: class @org.jetbrains.annotations.NotNull Player"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 16,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 65,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 75,
                "message": "error: cannot find symbol",
                "content": "        newCell.setEntity(gameBoard.getPlayer());\n               ^\n  symbol:   method setEntity(@org.jetbrains.annotations.NotNull Player)\n  location: variable newCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 76,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "        return new MoveResult.Valid(newPosition, playerPosition);\n               ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 102,
                "message": "error: cannot find symbol",
                "content": "                origCell.setEntity(gameBoard.getPlayer());\n                        ^\n  symbol:   method setEntity(@org.jetbrains.annotations.NotNull Player)\n  location: variable origCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 110,
                "message": "error: cannot find symbol",
                "content": "                newCell.setEntity(null);\n                       ^\n  symbol:   method setEntity(<null>)\n  location: variable newCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 57,
                "message": "error: cannot find symbol",
                "content": "            Entity newEntity = newEntityCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 61,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectGem();\n                                     ^\n  symbol:   method collectGem()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 65,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.getPlayer().collectExtraLife();\n                                     ^\n  symbol:   method collectExtraLife()\n  location: class @org.jetbrains.annotations.NotNull Player"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 75,
                "message": "error: cannot find symbol",
                "content": "        newCell.setEntity(gameBoard.getPlayer());\n               ^\n  symbol:   method setEntity(@org.jetbrains.annotations.NotNull Player)\n  location: variable newCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 76,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "        return new MoveResult.Valid(newPosition, playerPosition);\n               ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 102,
                "message": "error: cannot find symbol",
                "content": "                origCell.setEntity(gameBoard.getPlayer());\n                        ^\n  symbol:   method setEntity(@org.jetbrains.annotations.NotNull Player)\n  location: variable origCell of type Cell"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 110,
                "message": "error: cannot find symbol",
                "content": "                newCell.setEntity(null);\n                       ^\n  symbol:   method setEntity(<null>)\n  location: variable newCell of type Cell"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 4,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 79,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 79,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoardController.java",
        "compile_errors_count": 12,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "        Entity playerEntity = gameBoard.getPlayer().getOwner().getEntity();\n        ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 66,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.setNumGems(gameBoard.getNumGems() - 1);\n                     ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 77,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 96,
                "message": "error: cannot find symbol",
                "content": "            Entity playerEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 101,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.setNumGems(gameBoard.getNumGems() + collectedGems.size());\n                         ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 51,
                "message": "error: cannot find symbol",
                "content": "        PositionOffset offset = direction.getOffset();\n        ^\n  symbol:   class PositionOffset\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "        Entity playerEntity = gameBoard.getPlayer().getOwner().getEntity();\n        ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 66,
                "message": "error: cannot find symbol",
                "content": "            gameBoard.setNumGems(gameBoard.getNumGems() - 1);\n                     ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 77,
                "message": "error: Valid(@org.jetbrains.annotations.NotNull Position,@org.jetbrains.annotations.NotNull Position) has private access in Valid",
                "content": "            return new MoveResult.Valid(newPosition, playerPosition);\n                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 96,
                "message": "error: cannot find symbol",
                "content": "            Entity playerEntity = newCell.getEntity();\n            ^\n  symbol:   class Entity\n  location: class GameBoardController"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoardController/src/main/java/pa1/controller/GameBoardController.java",
                "line": 101,
                "message": "error: cannot find symbol",
                "content": "                gameBoard.setNumGems(gameBoard.getNumGems() + collectedGems.size());\n                         ^\n  symbol:   method setNumGems(int)\n  location: variable gameBoard of type GameBoard"
            }
        ]
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 6,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameController/src/main/java/pa1/controller/GameController.java",
                "line": 40,
                "message": "error: cannot find symbol",
                "content": "            gameState.getGameBoardView().updateView();\n                                        ^\n  symbol:   method updateView()\n  location: class GameBoardView"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameController/src/main/java/pa1/controller/GameController.java",
                "line": 46,
                "message": "error: cannot find symbol",
                "content": "            gameState.getGameBoardView().updateView();\n                                        ^\n  symbol:   method updateView()\n  location: class GameBoardView"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameController/src/main/java/pa1/controller/GameController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "            gameState.getGameBoardView().updateView();\n                                        ^\n  symbol:   method updateView()\n  location: class GameBoardView"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameController/src/main/java/pa1/controller/GameController.java",
                "line": 40,
                "message": "error: cannot find symbol",
                "content": "            gameState.getGameBoardView().updateView();\n                                        ^\n  symbol:   method updateView()\n  location: class GameBoardView"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameController/src/main/java/pa1/controller/GameController.java",
                "line": 46,
                "message": "error: cannot find symbol",
                "content": "            gameState.getGameBoardView().updateView();\n                                        ^\n  symbol:   method updateView()\n  location: class GameBoardView"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameController/src/main/java/pa1/controller/GameController.java",
                "line": 60,
                "message": "error: cannot find symbol",
                "content": "            gameState.getGameBoardView().updateView();\n                                        ^\n  symbol:   method updateView()\n  location: class GameBoardView"
            }
        ]
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameController.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Entity.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/EntityCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/ExtraLife.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 10,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 68,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 72,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                    this.player = (Player) cell;\n                                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 74,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 75,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                    gems.add((Gem) cell);\n                                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 211,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 68,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 72,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                    this.player = (Player) cell;\n                                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 74,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 75,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                    gems.add((Gem) cell);\n                                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 211,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 68,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 70,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 87,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 68,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 70,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 87,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 205,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cells[i][j] instanceof Player) {\n                            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 71,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cells[i][j] instanceof Gem) {\n                                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 91,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 204,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (board[i][j] instanceof Gem) {\n                            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cells[i][j] instanceof Player) {\n                            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 71,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cells[i][j] instanceof Gem) {\n                                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 91,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 204,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (board[i][j] instanceof Gem) {\n                            ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 200,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 67,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 86,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 199,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 8,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 68,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 70,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 87,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 206,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 68,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cell instanceof Player) {\n                    ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 70,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cell instanceof Gem) {\n                           ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 87,
                "message": "error: cannot find symbol",
                "content": "        this.player = findPlayer(cells);\n                      ^\n  symbol:   method findPlayer(Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 206,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (cell instanceof Gem) {\n                    ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameBoard.java",
        "compile_errors_count": 10,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cells[i][j] instanceof Player) {\n                            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 73,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                    player = (Player) cells[i][j];\n                                              ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 75,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cells[i][j] instanceof Gem) {\n                                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 92,
                "message": "error: cannot find symbol",
                "content": "        dfs(player.getOwner().getPosition(), visited, cells);\n        ^\n  symbol:   method dfs(@org.jetbrains.annotations.NotNull Position,boolean[][],Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 215,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (board[i][j] instanceof Gem) {\n                            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 69,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                if (cells[i][j] instanceof Player) {\n                            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 73,
                "message": "error: incompatible types: Cell cannot be converted to Player",
                "content": "                    player = (Player) cells[i][j];\n                                              ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 75,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                } else if (cells[i][j] instanceof Gem) {\n                                   ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 92,
                "message": "error: cannot find symbol",
                "content": "        dfs(player.getOwner().getPosition(), visited, cells);\n        ^\n  symbol:   method dfs(@org.jetbrains.annotations.NotNull Position,boolean[][],Cell[][])\n  location: class GameBoard"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/GameBoard/src/main/java/pa1/model/GameBoard.java",
                "line": 215,
                "message": "error: incompatible types: Cell cannot be converted to Gem",
                "content": "                if (board[i][j] instanceof Gem) {\n                            ^"
            }
        ]
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/GameState.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 2,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/Gem/src/main/java/pa1/model/Gem.java",
                "line": 29,
                "message": "error: owner has private access in Entity",
                "content": "        this.owner = owner;\n            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/Gem/src/main/java/pa1/model/Gem.java",
                "line": 29,
                "message": "error: owner has private access in Entity",
                "content": "        this.owner = owner;\n            ^"
            }
        ]
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Gem.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 2,
        "compile_errors": [
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/Mine/src/main/java/pa1/model/Mine.java",
                "line": 30,
                "message": "error: owner has private access in Entity",
                "content": "        this.owner = owner;\n            ^"
            },
            {
                "source": "/private/tmp/pre-coder/89654-single_class/PA21/Mine/src/main/java/pa1/model/Mine.java",
                "line": 30,
                "message": "error: owner has private access in Entity",
                "content": "        this.owner = owner;\n            ^"
            }
        ]
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Mine.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveResult.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/MoveStack.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Player.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/Position.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    },
    {
        "task_id": "PA21/StopCell.java",
        "compile_errors_count": 0,
        "compile_errors": []
    }
]
